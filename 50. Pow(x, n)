class Solution {
public:
    double myPow(double x, int n) {
        bool negativeExponent = n < 0;
        bool evenExponent = n % 2 == 0;
        bool negativeBase = x < 0;

        if (x == 1.0 || x == 0 || n == 1) return x;
        if (n == 0) return 1;

        n = abs(n);
        x = abs(x);
        
        double ans = 1;
        double curX = x;
        while (n > 1) {
            if (n%2 == 1) {
                ans *= curX;
            }
            curX *= curX;
            n /= 2;
        }
        ans *= curX;

        if (negativeExponent) {
            ans = 1 / ans;
        }
        if (negativeBase && !evenExponent) {
            ans *= -1;
        }
        return ans;
    }
};

// July 24, 2023
