class Solution {
public:
    int ans = INT_MAX;
    vector<int> squares;
    vector<int> dp;
    Solution() {
        dp = vector<int>(10010, -1);
        for (int i=2; i<4; i++) {
            dp[i] = i;
        }
        for (int i=0; i<=100; i++) {
            int num = i*i;
            squares.push_back(num);
            dp[num] = 1;
        }
    }
    int solve(int n) {
        if (dp[n] != -1) return dp[n];
        int i = upper_bound(squares.begin(), squares.end(), n) - squares.begin();
        i--;
        int curAns = INT_MAX;
        for (int j=i; j>1; j--) {
            curAns = min(curAns, solve(n-squares[j])); 
        }
        dp[n] = curAns + 1;
        return dp[n];
    }
    int numSquares(int n) {
        return solve(n);
    }
};
//November 22, 2022
