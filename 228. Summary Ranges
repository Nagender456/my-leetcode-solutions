class Solution {
public:
    string createStr(int left, int right) {
        if (left == right) {
            return to_string(left);
        } else {
            return to_string(left) + "->" + to_string(right);
        }
    }
    vector<string> summaryRanges(vector<int>& nums) {
        if (nums.size() == 0) return {};
        int left = nums[0];
        int right = nums[0];
        int prev = nums[0];
        nums.push_back(INT_MIN);
        vector<string> ans;
        string curStr;
        for (int i=1; i<nums.size(); i++) {
            if (prev+1 == nums[i]) {
                right = nums[i];
            } else {
                curStr = createStr(left, right);
                ans.push_back(curStr);
                left = nums[i];
                right = nums[i];
            }
            prev = nums[i];
            if (prev == INT_MAX) {
                ans.push_back(createStr(left, right));
                break;
            }
        }
        return ans;
    }
};

// June 12, 2023
