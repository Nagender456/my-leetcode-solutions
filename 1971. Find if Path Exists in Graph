class Solution {
public:
    bool validPath(int n, vector<vector<int>>& edges, int source, int destination) {
        if (source == destination) return true;
        map<int, vector<int>> neighbors;
        vector<bool> visited(n, false);
        stack<int> nodesToVisit;
        for (auto edge: edges) {
            neighbors[edge[0]].push_back(edge[1]);
            neighbors[edge[1]].push_back(edge[0]);
        }
        nodesToVisit.push(source);
        visited[source] = true;
        while (!nodesToVisit.empty()) {
            int node = nodesToVisit.top();
            nodesToVisit.pop();
            for (auto neighbor: neighbors[node]) {
                if (visited[neighbor]) continue;
                if (neighbor == destination) return true;
                nodesToVisit.push(neighbor);
                visited[neighbor] = true;
            }
        }
        return false;
    }
};
// December 19, 2022
